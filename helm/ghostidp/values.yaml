# Default values for ghostidp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghostidp # TODO: adapt once published
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest" # TODO: adapt once published

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

ghostidp:
  #debug: true
  hydraAdminURL: http://ghostidp-hydra-admin:4445/admin
  usersConfig: |
    users:
      - username: alice
        description: A demo user.
        email: alice@example.com
        given_name: Alice
        family_name: Smith
        custom_claims:
          department: engineering
          employed_id: 12345
          roles:
            - admin
            - user
  defaultOAuth2Client:
    enabled: false
#    name: test-oauth2-client
#    clientName: "My test client"
#    skipConsent: false
#    grantTypes:
#      - client_credentials
#      - implicit
#      - authorization_code
#      - refresh_token
#    responseTypes:
#      - id_token
#      - code
#    scope: "offline openid"
#    credentials:
#      hydraGenerated: false
#      clientID: "some ID"
#      clientSecret: "some secret"
#    redirectUris:
#      - "http://127.0.0.1:5050/callback"
#    postLogoutRedirectUris:
#      - "http://127.0.0.1:5050/"
#    audience:
#      - aud-a
#    tokenEndpointAuthMethod: client_secret_basic

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

# HTTP Route
httpRoute:
  enabled: false
  gatewayName: nginx-gw
  gatewayNamespace: default
  hostnames:
    - example.org

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
